{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-form/index.js","components/add-form/add-button.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","todo","done","className","SearchPanel","state","input","onSearch","target","setState","value","props","placeholder","this","type","onChange","React","Component","TodoListItem","name","onDeleted","onToggleDone","onToggleImportant","ClassName","important","onClick","TodoList","todoData","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","active","filter","onTabClicked","toLowerCase","AddForm","onInputChanged","e","onSubmit","preventDefault","onAdded","App","maxId","createTodoItem","val","deleteListItem","currentIndex","findIndex","before","slice","after","addListItem","text","newListItem","toggleProperty","search","items","length","indexOf","arr","propName","oldItem","newItem","visibleItems","doneCount","todoCount","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5e5563b8.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({todo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{todo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import React from \"react\";\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n    state = {\r\n        input: '',\r\n    };\r\n\r\n    onSearch = ({ target }) => {\r\n        this.setState({\r\n            input: target.value,\r\n        });\r\n\r\n        this.props.onSearch(target.value);\r\n    };\r\n\r\n    render() {\r\n        const { placeholder } = this.props;\r\n        const { input } = this.state;\r\n\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   onChange={this.onSearch}\r\n                   value={input}\r\n                   placeholder={placeholder}/>\r\n        );\r\n    }\r\n};","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React from \"react\";\r\nimport './todo-list-item.css'\r\n\r\nconst TodoListItem = (props) => {\r\n    const { name, onDeleted, onToggleDone, onToggleImportant, done, important  } = props;\r\n\r\n    let ClassName = \"todo-list-item\";\r\n    if (done) ClassName += \" done\";\r\n    if (important) ClassName += \" important\";\r\n\r\n    return (\r\n        <span className={ClassName}>\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={onToggleDone}>\r\n                {name}\r\n            </span>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\"\r\n                onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\" />\r\n            </button>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}>\r\n                <i className=\"fas fa-trash\" />\r\n            </button>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todoData, onDeleted, onToggleDone, onToggleImportant }) => {\r\n    const elements = todoData.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n    buttons = [\r\n        {name: 'All', active: true, id: 245},\r\n        {name: 'Active', active: false, id: 453453},\r\n        {name: 'Done', active: false, id: 864},\r\n    ];\r\n\r\n    render() {\r\n        const { filter, onTabClicked } = this.props;\r\n\r\n        const buttons = this.buttons.map((item) => {\r\n            const isActive = filter === item.name.toLowerCase();\r\n\r\n            let className = 'btn ';\r\n            className +=\r\n                isActive ?\r\n                    'btn-info' :\r\n                    'btn-outline-secondary';\r\n\r\n            return (\r\n                <button\r\n                    type=\"button\"\r\n                    className={className}\r\n                    key={item.id}\r\n                    onClick={() => onTabClicked(item.name.toLowerCase())}>{item.name}</button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import AddForm from \"./add-button\";\r\n\r\nexport default AddForm;","import React from \"react\";\r\nimport './add-form.css';\r\n\r\nexport default class AddForm extends React.Component {\r\n    state = {\r\n        input: '',\r\n    };\r\n\r\n    onInputChanged = (e) => {\r\n        this.setState({\r\n            input: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdded(this.state.input);\r\n\r\n        this.setState({\r\n            input: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"add-form d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onInputChanged}\r\n                    placeholder=\"What needs to be done\"\r\n                    value={this.state.input}/>\r\n                <button\r\n                    className=\"btn btn-outline-secondary add-btn\">\r\n                    Add new task\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport AddForm from \"../add-form\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends React.Component {\r\n    maxId = 1;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem(\"Go work\"),\r\n            this.createTodoItem(\"Build awesome app\"),\r\n            this.createTodoItem(\"Go home\"),\r\n        ],\r\n        val: '',\r\n        filter: 'active',  // active / done / all\r\n    };\r\n\r\n    createTodoItem(name) {\r\n        return {\r\n            name,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++,\r\n        }\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const currentIndex = arr.findIndex((item) => item.id === id );\r\n\r\n        const oldItem = arr[currentIndex];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName] };\r\n\r\n        return [\r\n            ...arr.slice(0, currentIndex),\r\n            newItem,\r\n            ...arr.slice(currentIndex + 1),\r\n        ];\r\n    }\r\n\r\n    deleteListItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const currentIndex = todoData.findIndex((item) => item.id === id );\r\n            const before = todoData.slice(0, currentIndex);\r\n            const after = todoData.slice(currentIndex + 1);\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                todoData: newArray,\r\n            };\r\n        });\r\n    };\r\n\r\n    addListItem = (text) => {\r\n        this.setState(({ todoData }) => {\r\n            const newListItem = this.createTodoItem(text);\r\n\r\n            const newArray = [...todoData, newListItem];\r\n\r\n            return {\r\n                todoData: newArray,\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData} ) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done'),\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData} ) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important'),\r\n            }\r\n        });\r\n    };\r\n\r\n    onSearch = (val) => {\r\n        this.setState({ val });\r\n    };\r\n\r\n    search = (items, val) => {\r\n        if (!val.length) return items;\r\n\r\n        return items.filter((item) => {\r\n            return item.name\r\n                .toLowerCase()\r\n                .indexOf(val.toLowerCase()) > -1\r\n        });\r\n    };\r\n\r\n    filter = (items, filter) => {\r\n        switch (filter) {\r\n            case \"all\": {\r\n                return items;\r\n            }\r\n            case \"active\": {\r\n                return items.filter((item) => {\r\n                    return item.done === false;\r\n                });\r\n            }\r\n            case \"done\": {\r\n                return items.filter((item) => {\r\n                    return item.done === true;\r\n                });\r\n            }\r\n            default: {\r\n                return items;\r\n            }\r\n        }\r\n    };\r\n\r\n    onTabClicked = (name) => {\r\n        this.setState({ filter: name });\r\n    };\r\n\r\n    render() {\r\n        const { todoData, val, filter } = this.state;\r\n\r\n        const visibleItems = this.search(this.filter(todoData, filter), val);\r\n\r\n        const doneCount = todoData\r\n            .filter((item) =>  item.done)\r\n            .length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader todo={todoCount} done={doneCount} />\r\n\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        placeholder=\"Type to search\"\r\n                        onSearch={this.onSearch}/>\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onTabClicked={this.onTabClicked}/>\r\n                </div>\r\n\r\n                <TodoList\r\n                    todoData={visibleItems}\r\n                    onDeleted={(id) => this.deleteListItem(id)}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                />\r\n\r\n                <AddForm\r\n                    onAdded={this.addListItem}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/app\"\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}